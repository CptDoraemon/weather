{"version":3,"sources":["components/header.js","components/icon.js","components/day-chart.js","components/hour-chart.js","components/selected-summary.js","components/loading.js","App.js","utilities/weather-query.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","geoData","getDisplayTime","selectedDataObj","time","isDaySummary","summary","Component","Icon","style","width","height","objectFit","filename","indexOf","icon","src","process","alt","React","Daily","onClick","setSelectedDataObj","obj","setIsDaySummary","icon_Icon","temperatureHigh","temperatureLow","DayChart","_this","dayName","objArray","map","isCelsius","Math","round","fToC","key","Date","getDay","HourChart","UnitSwitcher","unitSwitcher","SelectedSummaryLeft","temperature","SelectedSummaryRight","precipitation","humidity","windSpeed","SelectedSummary","temperatureF","undefined","precipProbability","mph","mphToKmh","Loading","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isTimeout","timeout","showTimeoutMessage","bind","assertThisInitialized","refresh","window","location","reload","setState","setTimeout","clearTimeout","spanArray","i","length","animationDelay","span","charAt","push","timeoutWrapper","AppLoaded","weatherData","currently","timeStamp","isDayOnly","dateObj","dayOnly","hours","getHours","minutes","getMinutes","f","toFixed","isCelsiusNow","trueOrFalse","states","data","tools","injectProps","objectSpread","Fragment","header_Header","selected_summary_SelectedSummary","hour_chart_HourChart","day_chart_DayChart","daily","Attributions","href","target","rel","WrappedComponent","App","isFailed","errorMessage","isLoaded","App_AppLoaded","loading_Loading","WithWeatherQueryApp","_Component","_class","latitude","longitude","sendQuery","useMockLoacation","getGeoLocation","inherits","createClass","value","_this2","isWeatherReady","isGeocodingReady","origin","fetchOptions","method","mode","cache","credentials","headers","content-type","redirect","referrer","body","JSON","stringify","fetch","then","res","json","status","console","log","catch","e","_this3","navigator","geolocation","getCurrentPosition","position","coords","assign","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ce1ee878.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './header.css';\nimport '../App.css';\n\nexport default class Header extends Component {\n    render() {\n\n        return (\n            <div className='header-wrapper quarter-height-wrapper grey'>\n                <h1> { this.props.geoData } </h1>\n                <h2> { this.props.getDisplayTime(this.props.selectedDataObj.time, this.props.isDaySummary) } </h2>\n                <h2> { this.props.selectedDataObj.summary } </h2>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class Icon extends React.Component {\n    render() {\n        const style = {\n            width: this.props.width,\n            height: this.props.height,\n            objectFit: 'cover'\n        };\n        const availableIcons = ['clear-day', 'clear-night', 'rain', 'snow', 'sleet', 'wind', 'fog', 'cloudy', 'partly-cloudy-day', 'partly-cloudy-night'];\n        const filename = availableIcons.indexOf(this.props.icon) === -1 ? 'na.svg' : this.props.icon + '.svg';\n        return (\n            <img src={process.env.PUBLIC_URL + '/svg/' + filename} style={style} alt={this.props.icon} />\n        )\n    }\n};","import React, { Component } from 'react';\nimport './day-chart.css';\nimport '../App.css';\nimport Icon from './icon';\n\nfunction Daily(props) {\n    return (\n        <div className='daily-wrapper' onClick={()=>{props.setSelectedDataObj(props.obj);props.setIsDaySummary(true)}}>\n            { props.time }\n            <Icon width='50px' height='50px' icon={props.icon}/>\n            <div className='daily-temp'>\n                <span className='daily-temp-high'>{ props.temperatureHigh }&#176;</span>\n                <span className='daily-temp-low'>{ props.temperatureLow }&#176;</span>\n            </div>\n        </div>\n    )\n}\n\nexport default class DayChart extends Component {\n    render() {\n        const dayName = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n        return (\n            <div className='daychart-wrapper quarter-height-wrapper'>\n                { this.props.objArray.map(obj => {\n                    const temperatureHigh = this.props.isCelsius ? Math.round(this.props.fToC(obj.temperatureHigh)) : Math.round(obj.temperatureHigh);\n                    const temperatureLow = this.props.isCelsius ? Math.round(this.props.fToC(obj.temperatureLow)) : Math.round(obj.temperatureLow);\n                    return (\n                        <Daily\n                            key={obj.time}\n                            icon={obj.icon}\n                            time={dayName[(new Date(obj.time * 1000)).getDay()]}\n                            temperatureHigh={temperatureHigh}\n                            temperatureLow={temperatureLow}\n                            obj={obj}\n                            setSelectedDataObj={this.props.setSelectedDataObj}\n                            setIsDaySummary={this.props.setIsDaySummary}\n                        />\n                        )\n                }) }\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './hour-chart.css';\n\nexport default class HourChart extends Component {\n    render() {\n        return (\n            <div className='quarter-height-wrapper'>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './selected-summary.css';\nimport '../App.css'\nimport Icon from './icon';\n\nfunction UnitSwitcher(props) {\n    return (\n        <div className='unit-switcher-wrapper'>\n            {/*c*/}\n            <span\n                className={!props.isCelsius ? 'unit-switcher-button-inactive' : 'unit-switcher-button-active'}\n                onClick={() => props.unitSwitcher(false)}>&#8451;</span>\n            <span> | </span>\n            {/*f*/}\n            <span\n                onClick={() => props.unitSwitcher(true)}\n                className={props.isCelsius ? 'unit-switcher-button-inactive' : 'unit-switcher-button-active'}>&#8457;</span>\n        </div>\n    )\n}\nfunction SelectedSummaryLeft(props) {\n    return (\n        <div className='selected-summary-left-wrapper'>\n            <Icon icon={props.icon} width='80px' height='80px'/>\n            <div className='selected-summary-temperature'> {props.temperature} </div>\n            <UnitSwitcher unitSwitcher={props.unitSwitcher} isCelsius={props.isCelsius}/>\n        </div>\n    )\n}\nfunction SelectedSummaryRight(props) {\n    return (\n        <div className='selected-summary-right-wrapper grey'>\n            <div className='selected-summary-right-item'>Precipitation: {props.precipitation}%</div>\n            <div className='selected-summary-right-item'>Humidity: {props.humidity}%</div>\n            <div className='selected-summary-right-item'>Wind: {props.windSpeed}</div>\n        </div>\n    )\n}\nexport default class SelectedSummary extends Component {\n    render() {\n        const temperatureF = this.props.selectedDataObj.temperature === undefined ? this.props.selectedDataObj.temperatureHigh : this.props.selectedDataObj.temperature;\n        let temperature = this.props.isCelsius ? this.props.fToC(temperatureF) : temperatureF;\n        temperature = Math.round(temperature);\n        //\n        const precipitation = Math.round(this.props.selectedDataObj.precipProbability * 100);\n        //\n        const humidity = Math.round(this.props.selectedDataObj.humidity * 100);\n        //\n        const mph = this.props.selectedDataObj.windSpeed;\n        const windSpeed = this.props.isCelsius ? this.props.mphToKmh(mph) + ' km/h': mph + ' mph';\n\n        return (\n            <div className='selected-summary-wrapper quarter-height-wrapper'>\n                <SelectedSummaryLeft icon={this.props.selectedDataObj.icon} temperature={temperature} unitSwitcher={this.props.unitSwitcher} isCelsius={this.props.isCelsius}/>\n                <SelectedSummaryRight precipitation={precipitation} humidity={humidity} windSpeed={windSpeed}/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './loading.css';\nimport '../App.css';\n\nexport default class Loading extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTimeout: false\n        };\n        this.timeout = null;\n        this.showTimeoutMessage = this.showTimeoutMessage.bind(this);\n        this.refresh = this.refresh.bind(this);\n    }\n    refresh() {\n        if (!this.state.isTimeout) return;\n        window.location.reload()\n    }\n    showTimeoutMessage() {\n        this.setState({\n            isTimeout: true\n        })\n    }\n    componentDidMount() {\n        this.timeout = setTimeout(this.showTimeoutMessage, 5000)\n    }\n    componentWillUnmount() {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n    }\n    render() {\n        const text = 'loading...';\n        const spanArray = [];\n        for (let i=0; i<text.length; i++) {\n            const style = {\n                animationDelay: i*0.2+'s'\n            };\n            const span = <span key={'loading'+i} className='loading-span' style={style}>{text.charAt(i)}</span>;\n            spanArray.push(span)\n        }\n\n        const timeoutWrapper = this.state.isTimeout ? 'loading-timeout-active' : 'loading-timeout-inactive';\n        return (\n            <div className='loading-wrapper grey'>\n                <div className={timeoutWrapper}>\n                    <div className='loading-timeout-message'>This app relies on free tiers of the weather and geocoding API services, the responses can be slow sometimes.</div>\n                </div>\n                <div className='loading-text-wrapper grey'>\n                    { spanArray }\n                </div>\n                <div className={timeoutWrapper}>\n                    <div className='loading-refresher' onClick={this.refresh}>refresh?</div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport DayChart from './components/day-chart';\nimport HourChart from './components/hour-chart';\nimport SelectedSummary from \"./components/selected-summary\";\nimport Loading from './components/loading';\nimport withWeatherQuery from './utilities/weather-query';\n\nclass AppLoaded extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedDataObj: this.props.weatherData.currently,\n            isDaySummary: false,\n            isCelsius: true\n        };\n        this.unitSwitcher = this.unitSwitcher.bind(this);\n        this.setSelectedDataObj = this.setSelectedDataObj.bind(this);\n        this.setIsDaySummary = this.setIsDaySummary.bind(this);\n    }\n    getDisplayTime(timeStamp, isDayOnly) {\n        const dateObj = new Date(timeStamp * 1000);\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const dayOnly = days[dateObj.getDay()];\n        const hours = dateObj.getHours() < 10 ? '0' + dateObj.getHours() : dateObj.getHours();\n        const minutes = dateObj.getMinutes() < 10 ? '0' + dateObj.getMinutes() : dateObj.getMinutes();\n        const full = dayOnly + ' ' + hours + ':' + minutes;\n        return isDayOnly ? dayOnly : full\n    }\n    fToC(f) {\n        return ((f - 32) * 5/9);\n    }\n    mphToKmh(mph) {\n        return (mph / 1.609).toFixed(2);\n    }\n    unitSwitcher(isCelsiusNow) {\n        this.setState({isCelsius: !isCelsiusNow})\n    }\n    setSelectedDataObj(obj) {\n        this.setState({\n            selectedDataObj: obj\n        })\n    }\n    setIsDaySummary(trueOrFalse) {\n        this.setState({isDaySummary: trueOrFalse})\n    }\n    render() {\n        const states = {\n            isDaySummary: this.state.isDaySummary,\n            isCelsius: this.state.isCelsius\n        };\n        const data = {\n            geoData: this.props.geoData,\n            weatherData: this.props.weatherData,\n            selectedDataObj: this.state.selectedDataObj,\n        };\n        const tools = {\n            getDisplayTime: this.getDisplayTime,\n            fToC: this.fToC,\n            mphToKmh: this.mphToKmh,\n            unitSwitcher: this.unitSwitcher,\n            setSelectedDataObj: this.setSelectedDataObj\n        };\n        const injectProps = {...states, ...data, ...tools};\n        return (\n            <React.Fragment>\n                <Header {...injectProps}/>\n                <SelectedSummary {...injectProps}/>\n                <HourChart />\n\n                <DayChart\n                    objArray={this.props.weatherData.daily.data}\n                    fToC={this.fToC}\n                    setSelectedDataObj={this.setSelectedDataObj}\n                    setIsDaySummary={this.setIsDaySummary}\n                    isCelsius={this.state.isCelsius}\n                />\n            </React.Fragment>\n        )\n    }\n}\nfunction Attributions(props) {\n    return (\n        <div className='attributions-wrapper grey'>\n            <a href='https://darksky.net/poweredby/' target='_blank' rel='noopener noreferrer'>Powered by Dark Sky</a>\n            <a href='https://locationiq.com/' target='_blank' rel='noopener noreferrer'>Search by LocationIQ.com</a>\n        </div>\n    )\n}\nclass App extends Component {\n    render() {\n        return (\n            <div className='app-wrapper'>\n                <div className='app-safe-area'>\n                { this.props.isFailed ? this.props.errorMessage\n                    : this.props.isLoaded ? <AppLoaded {...this.props} /> : <Loading />\n                }\n                </div>\n                <Attributions />\n            </div>\n        )\n    }\n}\n\nconst WithWeatherQueryApp = withWeatherQuery(App);\nexport default WithWeatherQueryApp;\n","import React, { Component } from 'react';\n\nexport default function withWeatherQuery(WrappedComponent) {\n    return class extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                isLoaded: false,\n                isFailed: false\n            };\n            this.latitude = null;\n            this.longitude = null;\n            this.weatherData = null;\n            this.geoData = null;\n            this.errorMessage = '';\n            this.sendQuery = this.sendQuery.bind(this);\n            this.useMockLoacation = this.useMockLoacation.bind(this);\n            this.getGeoLocation = this.getGeoLocation.bind(this);\n        }\n\n        sendQuery() {\n            let isWeatherReady = false;\n            let isGeocodingReady = false;\n            const origin = 'https://www.xiaoxihome.com/';\n            // const origin = 'http://localhost:5000/';\n\n            const fetchOptions = {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'default',\n                credentials: 'same-origin',\n                headers: {\n                    'content-type': 'application/json'\n                },\n                redirect: 'follow',\n                referrer: 'client',\n                body: JSON.stringify({\n                    latitude: this.latitude,\n                    longitude: this.longitude\n                })\n            };\n\n            fetch(origin + 'api/weather', fetchOptions)\n                .then(res => res.json())\n                .then(json => {\n                    if (json.status === 'success') {\n                        this.weatherData = json.data;\n                        console.log(json.data);\n                        isWeatherReady = true;\n                        if (isWeatherReady && isGeocodingReady) this.setState({isLoaded: true})\n                    } else {\n                        this.errorMessage = json.data;\n                        this.setState({isFailed: true})\n                    }\n                })\n                .catch(e => console.log(e));\n\n            fetch(origin + 'api/reversegeocoding', fetchOptions)\n                .then(res => res.json())\n                .then(json => {\n                    if (json.status === 'success') {\n                        this.geoData = json.data;\n                        console.log(json.data);\n                        isGeocodingReady = true;\n                        if (isWeatherReady && isGeocodingReady) this.setState({isLoaded: true})\n                    } else {\n                        this.errorMessage = json.data;\n                        this.setState({isFailed: true})\n                    }\n                })\n                .catch(e => console.log(e))\n        }\n        useMockLoacation() {\n            // in case of geolocation no available or denied\n            this.latitude = 43.70011;\n            this.longitude = -79.4163;\n            this.sendQuery()\n        }\n        getGeoLocation() {\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    this.latitude = position.coords.latitude;\n                    this.longitude = position.coords.longitude;\n                    this.sendQuery()\n                }, this.useMockLoacation);\n            } else {\n                this.useMockLoacation();\n            }\n        }\n        componentDidMount() {\n            this.getGeoLocation()\n        }\n        render() {\n            const injectProps = {\n                isLoaded: this.state.isLoaded,\n                weatherData: this.weatherData,\n                geoData: this.geoData,\n                isFailed: this.state.isFailed,\n                errorMessage: this.errorMessage\n            };\n            return (\n                <WrappedComponent {...this.props} {...injectProps}/>\n            )\n        }\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WithWeatherQueryApp from './App';\n\nfunction Index(props) {\n    return (\n        <div className='index-wrapper'>\n            <WithWeatherQueryApp />\n        </div>\n    )\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n"],"sourceRoot":""}