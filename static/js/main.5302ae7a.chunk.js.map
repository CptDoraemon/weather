{"version":3,"sources":["components/header.js","components/day-chart.js","components/hour-chart.js","components/icon.js","components/selected-summary.js","components/loading.js","App.js","utilities/weather-query.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","geoData","getDisplayTime","selectedDataObj","time","isDaySummary","summary","Component","DayChart","HourChart","Icon","style","width","height","objectFit","filename","indexOf","icon","src","process","alt","React","UnitSwitcher","isCelsius","onClick","unitSwitcher","SelectedSummaryLeft","icon_Icon","temperature","SelectedSummaryRight","precipitation","humidity","windSpeed","SelectedSummary","temperatureF","fToC","Math","round","precipProbability","mph","mphToKmh","Loading","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isTimeout","timeout","showTimeoutMessage","bind","assertThisInitialized","refresh","window","location","reload","setState","setTimeout","clearTimeout","spanArray","i","length","animationDelay","span","key","charAt","push","timeoutWrapper","AppLoaded","weatherData","currently","timeStamp","isDayOnly","dateObj","Date","dayOnly","getDay","hours","getHours","minutes","getMinutes","f","toFixed","isCelsiusNow","states","data","tools","injectProps","objectSpread","Fragment","header_Header","selected_summary_SelectedSummary","hour_chart_HourChart","day_chart_DayChart","Attributions","href","target","rel","WrappedComponent","App","isFailed","errorMessage","isLoaded","App_AppLoaded","loading_Loading","WithWeatherQueryApp","_Component","_class","latitude","longitude","sendQuery","useMockLoacation","getGeoLocation","inherits","createClass","value","_this2","isWeatherReady","isGeocodingReady","origin","fetchOptions","method","mode","cache","credentials","headers","content-type","redirect","referrer","body","JSON","stringify","fetch","then","res","json","status","console","log","catch","e","_this3","navigator","geolocation","getCurrentPosition","position","coords","assign","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5302ae7a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './header.css';\nimport '../App.css';\n\nexport default class Header extends Component {\n    render() {\n\n        return (\n            <div className='header-wrapper quarter-height-wrapper grey'>\n                <h1> { this.props.geoData } </h1>\n                <h2> { this.props.getDisplayTime(this.props.selectedDataObj.time, this.props.isDaySummary) } </h2>\n                <h2> { this.props.selectedDataObj.summary } </h2>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './day-chart.css';\n\nexport default class DayChart extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './hour-chart.css';\n\nexport default class HourChart extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class Icon extends React.Component {\n    render() {\n        const style = {\n            width: this.props.width,\n            height: this.props.height,\n            objectFit: 'cover'\n        };\n        const availableIcons = ['clear-day', 'clear-night', 'rain', 'snow', 'sleet', 'wind', 'fog', 'cloudy', 'partly-cloudy-day', 'partly-cloudy-night'];\n        const filename = availableIcons.indexOf(this.props.icon) === -1 ? 'na.svg' : this.props.icon + '.svg';\n        return (\n            <img src={process.env.PUBLIC_URL + '/svg/' + filename} style={style} alt={this.props.icon} />\n        )\n    }\n};","import React, { Component } from 'react';\nimport './selected-summary.css';\nimport '../App.css'\nimport Icon from './icon';\n\nfunction UnitSwitcher(props) {\n    return (\n        <div className='unit-switcher-wrapper'>\n            {/*c*/}\n            <span\n                className={!props.isCelsius ? 'unit-switcher-button-inactive' : 'unit-switcher-button-active'}\n                onClick={() => props.unitSwitcher(false)}>&#8451;</span>\n            <span> | </span>\n            {/*f*/}\n            <span\n                onClick={() => props.unitSwitcher(true)}\n                className={props.isCelsius ? 'unit-switcher-button-inactive' : 'unit-switcher-button-active'}>&#8457;</span>\n        </div>\n    )\n}\nfunction SelectedSummaryLeft(props) {\n    return (\n        <div className='selected-summary-left-wrapper'>\n            <Icon icon={props.icon} width='80px' height='80px'/>\n            <div className='selected-summary-temperature'> {props.temperature} </div>\n            <UnitSwitcher unitSwitcher={props.unitSwitcher} isCelsius={props.isCelsius}/>\n        </div>\n    )\n}\nfunction SelectedSummaryRight(props) {\n    return (\n        <div className='selected-summary-right-wrapper'>\n            <div>Precipitation: {props.precipitation}%</div>\n            <div>Humidity: {props.humidity}%</div>\n            <div>Wind: {props.windSpeed}</div>\n        </div>\n    )\n}\nexport default class SelectedSummary extends Component {\n    render() {\n        const temperatureF = this.props.selectedDataObj.temperature;\n        let temperature = this.props.isCelsius ? this.props.fToC(temperatureF) : temperatureF;\n        temperature = Math.round(temperature);\n        //\n        const precipitation = this.props.selectedDataObj.precipProbability * 100;\n        //\n        const humidity = this.props.selectedDataObj.humidity * 100;\n        //\n        const mph = this.props.selectedDataObj.windSpeed;\n        const windSpeed = this.props.isCelsius ? this.props.mphToKmh(mph) + ' km/h': mph + ' mph';\n\n        return (\n            <div className='selected-summary-wrapper quarter-height-wrapper'>\n                <SelectedSummaryLeft icon={this.props.selectedDataObj.icon} temperature={temperature} unitSwitcher={this.props.unitSwitcher} isCelsius={this.props.isCelsius}/>\n                <SelectedSummaryRight precipitation={precipitation} humidity={humidity} windSpeed={windSpeed}/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './loading.css';\nimport '../App.css';\n\nexport default class Loading extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTimeout: false\n        };\n        this.timeout = null;\n        this.showTimeoutMessage = this.showTimeoutMessage.bind(this);\n        this.refresh = this.refresh.bind(this);\n    }\n    refresh() {\n        if (!this.state.isTimeout) return;\n        window.location.reload()\n    }\n    showTimeoutMessage() {\n        this.setState({\n            isTimeout: true\n        })\n    }\n    componentDidMount() {\n        this.timeout = setTimeout(this.showTimeoutMessage, 5000)\n    }\n    componentWillUnmount() {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n    }\n    render() {\n        const text = 'loading...';\n        const spanArray = [];\n        for (let i=0; i<text.length; i++) {\n            const style = {\n                animationDelay: i*0.2+'s'\n            };\n            const span = <span key={'loading'+i} className='loading-span' style={style}>{text.charAt(i)}</span>;\n            spanArray.push(span)\n        }\n\n        const timeoutWrapper = this.state.isTimeout ? 'loading-timeout-active' : 'loading-timeout-inactive';\n        return (\n            <div className='loading-wrapper grey'>\n                <div className={timeoutWrapper}>\n                    <div className='loading-timeout-message'>This app relies on free tiers of the weather and geocoding API services, the responses can be slow sometimes.</div>\n                </div>\n                <div className='loading-text-wrapper grey'>\n                    { spanArray }\n                </div>\n                <div className={timeoutWrapper}>\n                    <div className='loading-refresher' onClick={this.refresh}>refresh?</div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport DayChart from './components/day-chart';\nimport HourChart from './components/hour-chart';\nimport SelectedSummary from \"./components/selected-summary\";\nimport Loading from './components/loading';\nimport withWeatherQuery from './utilities/weather-query';\n\nclass AppLoaded extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedDataObj: this.props.weatherData.currently,\n            isDaySummary: false,\n            isCelsius: true\n        };\n        this.unitSwitcher = this.unitSwitcher.bind(this);\n    }\n    getDisplayTime(timeStamp, isDayOnly) {\n        const dateObj = new Date(timeStamp * 1000);\n        const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n        const dayOnly = days[dateObj.getDay()];\n        const hours = dateObj.getHours() < 10 ? '0' + dateObj.getHours() : dateObj.getHours();\n        const minutes = dateObj.getMinutes() < 10 ? '0' + dateObj.getMinutes() : dateObj.getMinutes();\n        const full = dayOnly + ' ' + hours + ':' + minutes;\n        return isDayOnly ? dayOnly : full\n    }\n    fToC(f) {\n        return ((f - 32) * 5/9);\n    }\n    mphToKmh(mph) {\n        return (mph / 1.609).toFixed(2);\n    }\n    unitSwitcher(isCelsiusNow) {\n        this.setState({isCelsius: !isCelsiusNow})\n    }\n    render() {\n        const states = {\n            isDaySummary: this.state.isDaySummary,\n            isCelsius: this.state.isCelsius\n        };\n        const data = {\n            geoData: this.props.geoData,\n            weatherData: this.props.weatherData,\n            selectedDataObj: this.state.selectedDataObj,\n        };\n        const tools = {\n            getDisplayTime: this.getDisplayTime,\n            fToC: this.fToC,\n            mphToKmh: this.mphToKmh,\n            unitSwitcher: this.unitSwitcher\n        };\n        const injectProps = {...states, ...data, ...tools};\n        return (\n            <React.Fragment>\n                <Header {...injectProps}/>\n                <SelectedSummary {...injectProps}/>\n                <HourChart />\n                <DayChart />\n            </React.Fragment>\n        )\n    }\n}\nfunction Attributions(props) {\n    return (\n        <div className='attributions-wrapper grey'>\n            <a href='https://darksky.net/poweredby/' target='_blank' rel='noopener noreferrer'>Powered by Dark Sky</a>\n            <a href='https://locationiq.com/' target='_blank' rel='noopener noreferrer'>Search by LocationIQ.com</a>\n        </div>\n    )\n}\nclass App extends Component {\n    render() {\n        return (\n            <div className='app-wrapper'>\n                <div className='app-safe-area'>\n                { this.props.isFailed ? this.props.errorMessage\n                    : this.props.isLoaded ? <AppLoaded {...this.props} /> : <Loading />\n                }\n                </div>\n                <Attributions />\n            </div>\n        )\n    }\n}\n\nconst WithWeatherQueryApp = withWeatherQuery(App);\nexport default WithWeatherQueryApp;\n","import React, { Component } from 'react';\n\nexport default function withWeatherQuery(WrappedComponent) {\n    return class extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                isLoaded: false,\n                isFailed: false\n            };\n            this.latitude = null;\n            this.longitude = null;\n            this.weatherData = null;\n            this.geoData = null;\n            this.errorMessage = '';\n            this.sendQuery = this.sendQuery.bind(this);\n            this.useMockLoacation = this.useMockLoacation.bind(this);\n            this.getGeoLocation = this.getGeoLocation.bind(this);\n        }\n\n        sendQuery() {\n            let isWeatherReady = false;\n            let isGeocodingReady = false;\n            const origin = 'https://www.xiaoxihome.com/';\n            // const origin = 'http://localhost:5000/';\n\n            const fetchOptions = {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'default',\n                credentials: 'same-origin',\n                headers: {\n                    'content-type': 'application/json'\n                },\n                redirect: 'follow',\n                referrer: 'client',\n                body: JSON.stringify({\n                    latitude: this.latitude,\n                    longitude: this.longitude\n                })\n            };\n\n            fetch(origin + 'api/weather', fetchOptions)\n                .then(res => res.json())\n                .then(json => {\n                    if (json.status === 'success') {\n                        this.weatherData = json.data;\n                        console.log(json.data);\n                        isWeatherReady = true;\n                        if (isWeatherReady && isGeocodingReady) this.setState({isLoaded: true})\n                    } else {\n                        this.errorMessage = json.data;\n                        this.setState({isFailed: true})\n                    }\n                })\n                .catch(e => console.log(e));\n\n            fetch(origin + 'api/reversegeocoding', fetchOptions)\n                .then(res => res.json())\n                .then(json => {\n                    if (json.status === 'success') {\n                        this.geoData = json.data;\n                        console.log(json.data);\n                        isGeocodingReady = true;\n                        if (isWeatherReady && isGeocodingReady) this.setState({isLoaded: true})\n                    } else {\n                        this.errorMessage = json.data;\n                        this.setState({isFailed: true})\n                    }\n                })\n                .catch(e => console.log(e))\n        }\n        useMockLoacation() {\n            // in case of geolocation no available or denied\n            this.latitude = 43.70011;\n            this.longitude = -79.4163;\n            this.sendQuery()\n        }\n        getGeoLocation() {\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    this.latitude = position.coords.latitude;\n                    this.longitude = position.coords.longitude;\n                    this.sendQuery()\n                }, this.useMockLoacation);\n            } else {\n                this.useMockLoacation();\n            }\n        }\n        componentDidMount() {\n            this.getGeoLocation()\n        }\n        render() {\n            const injectProps = {\n                isLoaded: this.state.isLoaded,\n                weatherData: this.weatherData,\n                geoData: this.geoData,\n                isFailed: this.state.isFailed,\n                errorMessage: this.errorMessage\n            };\n            return (\n                <WrappedComponent {...this.props} {...injectProps}/>\n            )\n        }\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WithWeatherQueryApp from './App';\n\nfunction Index(props) {\n    return (\n        <div className='index-wrapper'>\n            <WithWeatherQueryApp />\n        </div>\n    )\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n"],"sourceRoot":""}